service: auth-service
package:
  exclude:
    - python/**
    - python.layer.zip

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.10
  region: eu-central-1
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - ${self:custom.Table.Arn}
        - !Join ['/', ['${self:custom.Table.Arn}', 'index', '*']]

  environment:
    TableName: ${self:custom.Table.Name}


functions:
  auth:
    handler: src/handlers/auth.handler
    cors: true

  signup:
    handler: src/handlers/signup.handler
    events:
      - http:
          path: /signup
          method: post
          cors: true

  protected:
    handler: src/handlers/protected.handler
    events:
      - http:
          path: /customers/{id}
          method: get
          cors: true
          authorizer: auth

  login:
    handler: src/handlers/login.handler
    events:
      - http:
          path: /login
          method: post
          cors: true

  delete_user:
    handler: src/handlers/delete_user.handler
    events:
      - http:
          path: /user/{id}/delete
          method: delete
          cors: true
          authorizer: auth


plugins:
  - serverless-python-requirements
  - serverless-api-gateway-caching


resources:
  Resources:
    GatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: EXPIRED_TOKEN
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'
    AuthFailureGatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'

    Table:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-table-${self:provider.stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: GSI1
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1
                KeyType: HASH
              - AttributeName: pk
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

custom:
  Table:
    Arn: !GetAtt Table.Arn
    Name: !Ref Table
  apiGatewayCaching:
    enabled: false
